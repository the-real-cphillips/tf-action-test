---
name: 'Terraform FMT'

on: [pull_request]

jobs:
  terraform:
    name: 'Terraform FMT'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Terraform
        id: setup
        uses: hashicorp/setup-terraform@v1

      - id: files
          uses: jitterbit/get-changed-files@v1
      - run: |
          for changed_file in ${{ steps.files.outputs.all }}; do
            echo "Do something with this ${changed_file}."
          done
          echo "CHANGED_FILES=${{ steps.files.outputs.all }}" >> $GITHUB_ENV

      - name: Terraform Format
        id: fmt
        run: |
          echo ${CHANGED_FILES}
          #CHANGED_FILES=$(/usr/bin/git diff remotes/origin/main --diff-filter=d --name-only ./*.tf)
          #for file in ${CHANGED_FILES}; do cat ${file} | terraform fmt -check -; done
        continue-on-error: true

      - uses: actions/github-script@v3
        if: github.event_name == 'pull_request' && steps.fmt.outputs.exitcode != 0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const CODE = '```';
            const STATUS = ":x: **Failure**, Please Run `terraform fmt`";

            const output = `
            ### Terraform FMT
            ${STATUS}
            <details>
            <summary>Output</summary>

            ${CODE}
            ${{ steps.fmt.outputs.stdout }}
            ${CODE}

            </details>`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: End Result
        shell: bash
        run: |
          echo "fmt"
          test ${{ steps.fmt.outputs.exitcode }} -eq 0
